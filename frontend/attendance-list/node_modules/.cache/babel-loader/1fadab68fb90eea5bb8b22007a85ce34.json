{"ast":null,"code":"var _jsxFileName = \"/home/piotr/AttendanceListReact/attendance-list/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setItem] = useState({});\n\n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`);\n    console.log(response);\n    setItem(response.data);\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCreate = async groupName => {\n    setOpen(false);\n    let xd = {\n      name: groupName\n    };\n    console.log(xd);\n    const response = await axios.post(`http://${window.location.hostname}:8080/api/group`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n  };\n\n  const options = ['lfsdasdas', 'asdfsadasd', 'nnnnnnnnnnnnnnnnnnnnnnnnnnnnn'];\n  const [value, setValue] = useState(options[0]);\n  const [inputValue, setInputValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [\"First name: \", user.firstName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 44\n      }, this), \"Last name: \", user.lastName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 36\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 43\n      }, this), \"Role: \", user.role, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Create group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"In order to manage group you need to to choose group or create a new one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Group name\",\n            type: \"name\",\n            fullWidth: true,\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleCreate(document.getElementById('name').value),\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Assign to Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Assign to group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"In order to manage group you need to to choose group or create a new one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            value: value,\n            onChange: (event, newValue) => {\n              setValue(newValue);\n            },\n            inputValue: inputValue,\n            onInputChange: (event, newInputValue) => {\n              setInputValue(newInputValue);\n            },\n            id: \"controllable-states-demo\",\n            options: options,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Controllable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleCreate(document.getElementById('name').value),\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"3TqGuXtRj5I3fppIfX7VdjiV/a8=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/piotr/AttendanceListReact/attendance-list/src/Home.js"],"names":["React","useEffect","useState","axios","useParams","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","Autocomplete","Home","id","getData","user","setItem","response","get","window","location","hostname","console","log","data","open","setOpen","handleClickOpen","handleClose","handleCreate","groupName","xd","name","post","headers","options","value","setValue","inputValue","setInputValue","marginTop","display","flexDirection","alignItems","firstName","lastName","role","document","getElementById","event","newValue","newInputValue","width","params"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function Home() {\n  let { id } = useParams()\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setItem] = useState({});\n\n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`)\n    console.log(response)\n    setItem(response.data)\n  }\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCreate = async (groupName) => {\n    setOpen(false);\n    let xd = { name: groupName }\n    console.log(xd)\n    const response = await axios.post(\n      `http://${window.location.hostname}:8080/api/group`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n  };\n  const options = ['lfsdasdas', 'asdfsadasd', 'nnnnnnnnnnnnnnnnnnnnnnnnnnnnn']\n  const [value, setValue] = useState(options[0]);\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <div>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        First name: {user.firstName}<br /> <br />\n        Last name: {user.lastName} <br /> <br />\n        Role: {user.role}<br /><br />\n        <Button variant=\"outlined\" onClick={handleClickOpen}>\n          Create Group\n        </Button>\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>Create group</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              In order to manage group you need to to choose group or create a new one\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Group name\"\n              type=\"name\"\n              fullWidth\n              variant=\"standard\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={() => handleCreate(document.getElementById('name').value)}>Create</Button>\n          </DialogActions>\n        </Dialog>\n        <Button variant=\"outlined\" onClick={handleClickOpen}>\n          Assign to Group\n        </Button>\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>Assign to group</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              In order to manage group you need to to choose group or create a new one\n            </DialogContentText>\n            <Autocomplete\n              value={value}\n              onChange={(event, newValue) => {\n                setValue(newValue);\n              }}\n              inputValue={inputValue}\n              onInputChange={(event, newInputValue) => {\n                setInputValue(newInputValue);\n              }}\n              id=\"controllable-states-demo\"\n              options={options}\n              sx={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={() => handleCreate(document.getElementById('name').value)}>Create</Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}