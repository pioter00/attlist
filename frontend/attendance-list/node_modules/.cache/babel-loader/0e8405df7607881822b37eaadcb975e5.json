{"ast":null,"code":"var _jsxFileName = \"/home/piotr/AttendanceListReact/attendance-list/src/teacher/Teacher.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../styles/user.css';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  /* eslint-disable no-bitwise */\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n      width: 80,\n      height: 80,\n      margin: 'auto',\n      fontSize: 32\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`\n  };\n}\n\nexport default function Home() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setUser] = useState({});\n  const [groups, setGroup] = useState([]);\n  const [groupsID, setGroupID] = useState({});\n  const [students, setStudents] = useState([]);\n  const [otherStudents, setOtherStudents] = useState({});\n  const [attendance, setAttendances] = useState({});\n  const [groupStudents, setGroupStudents] = useState({});\n\n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`);\n    console.log(response);\n    setUser(response.data);\n    let idOfGroup = response.data.groupID;\n    response = await axios.get(`http://${window.location.hostname}:8080/api/group`);\n    let group_names = [];\n    let groupIDs = {};\n    response.data.forEach(element => {\n      group_names.push(element.name);\n      groupIDs[element.name] = element.id;\n    });\n    setGroupID(groupIDs);\n    setGroup(group_names);\n    response = await axios.get(`http://${window.location.hostname}:8080/api/user`);\n    setStudents(response.data);\n    let other = {};\n    let studentsOfGroup = {};\n    response.data.forEach(element => {\n      if (element.groupID !== idOfGroup && element.role === 'student') other[element.firstName + ' ' + element.lastName] = element.id;else if (element.groupID === idOfGroup) {\n        studentsOfGroup[element.id] = element;\n      }\n    });\n    console.log(studentsOfGroup);\n    setGroupStudents(studentsOfGroup);\n    setOtherStudents(other);\n    response = await axios.get(`http://${window.location.hostname}:8080/api/attendance`);\n    console.log(response);\n    let attendancesDict = {};\n    response.data.forEach(element => {\n      let key = `${element.nameOfSubject} ${element.attendanceFrom} - ${element.attendanceTo}`;\n      console.log(studentsOfGroup[element.studentID]);\n\n      if (Object.keys(attendancesDict).includes(key)) {\n        attendancesDict[key].push({\n          firstName: 'sdasd',\n          lastName: 'asd',\n          status: element.attendanceStatus\n        });\n      } else {\n        attendancesDict[key] = [{\n          firstName: 'studentsOfGroup[element.studentID].firstName',\n          lastName: 'studentsOfGroup[element.studentID].lastName',\n          status: element.attendanceStatus\n        }];\n      }\n    });\n    console.log(attendancesDict);\n    setAttendances(response.data);\n  };\n\n  const handleCreate = async groupName => {\n    let xd = {\n      name: groupName\n    };\n    console.log(xd);\n    const response = await axios.post(`http://${window.location.hostname}:8080/api/group`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    alert(`Group: ${response.data.name} created!`);\n    getData();\n  };\n\n  const handleAssign = async groupName => {\n    let xd = user;\n    xd.groupID = groupsID[groupName];\n    console.log(xd);\n    const response = await axios.put(`http://${window.location.hostname}:8080/api/user`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    getData();\n  };\n\n  const handleDelete = async student => {\n    student.groupID = null;\n    console.log(student);\n\n    if (window.confirm(`Student ${student.firstName} ${student.lastName} will be deleted!`)) {\n      const response = await axios.put(`http://${window.location.hostname}:8080/api/user`, student, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(response);\n    }\n\n    getData();\n  };\n\n  const handleAdd = async student => {\n    console.log(otherStudents[student]);\n    let xd = {};\n    students.forEach(element => {\n      if (otherStudents[student] === element.id) {\n        xd = element;\n        xd.groupID = user.groupID;\n      }\n    });\n    console.log(xd);\n    const response = await axios.put(`http://${window.location.hostname}:8080/api/user`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    getData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, { ...stringAvatar(user.firstName + ' ' + user.lastName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), user.firstName, \" \", user.lastName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 32,\n            fontWeight: 300\n          },\n          children: [\" \", groups[user.groupID - 1], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Group management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        label: \"Group name\",\n        type: \"name\",\n        variant: \"standard\",\n        style: {\n          margin: 10,\n          verticalAlign: 'inherit',\n          width: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => handleCreate(document.getElementById('name').value),\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"assign_group\",\n          options: groups,\n          disableClearable: true,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Group name\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this),\n          style: {\n            margin: 10,\n            verticalAlign: 'inherit',\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: 'left',\n          margin: '23px 0'\n        },\n        variant: \"outlined\",\n        onClick: () => handleAssign(document.getElementById('assign_group').value),\n        children: \"Change group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"students\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Your students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), students.map(element => {\n        if (element.role === 'student' && element.groupID === user.groupID) return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student\",\n          children: [element.firstName, \" \", element.lastName, /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              position: 'absolute',\n              right: 5\n            },\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: () => handleDelete(element),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this);else return null;\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"add_student\",\n          options: Object.keys(otherStudents),\n          disableClearable: true,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Student\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this),\n          style: {\n            margin: 10,\n            verticalAlign: 'inherit',\n            width: 260\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 20,\n          margin: '23px 0'\n        },\n        variant: \"contained\",\n        onClick: () => handleAdd(document.getElementById('add_student').value),\n        children: \"add student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendances\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Attendance list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"RRVzMUfHYo1Rucb5lDKU/djppPg=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/piotr/AttendanceListReact/attendance-list/src/teacher/Teacher.js"],"names":["React","useEffect","useState","axios","useParams","Button","TextField","Autocomplete","Avatar","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","stringAvatar","name","sx","bgcolor","width","height","margin","fontSize","children","split","Home","id","getData","user","setUser","groups","setGroup","groupsID","setGroupID","students","setStudents","otherStudents","setOtherStudents","attendance","setAttendances","groupStudents","setGroupStudents","response","get","window","location","hostname","console","log","data","idOfGroup","groupID","group_names","groupIDs","forEach","element","push","other","studentsOfGroup","role","firstName","lastName","attendancesDict","key","nameOfSubject","attendanceFrom","attendanceTo","studentID","Object","keys","includes","status","attendanceStatus","handleCreate","groupName","xd","post","headers","alert","handleAssign","put","handleDelete","student","confirm","handleAdd","fontWeight","verticalAlign","document","getElementById","float","params","textAlign","map","position","right"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../styles/user.css'\nimport Avatar from '@mui/material/Avatar';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n      width: 80,\n      height: 80,\n      margin: 'auto',\n      fontSize: 32\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n  };\n}\n\nexport default function Home() {\n  let { id } = useParams()\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setUser] = useState({});\n  const [groups, setGroup] = useState([]);\n  const [groupsID, setGroupID] = useState({});\n  const [students, setStudents] = useState([]);\n  const [otherStudents, setOtherStudents] = useState({});\n  const [attendance, setAttendances] = useState({});\n  const [groupStudents, setGroupStudents] = useState({});\n\n\n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`)\n    console.log(response)\n    setUser(response.data)\n    let idOfGroup = response.data.groupID\n    response = await axios.get(`http://${window.location.hostname}:8080/api/group`)\n\n    let group_names = [];\n    let groupIDs = {}\n    response.data.forEach(element => {\n      group_names.push(element.name)\n      groupIDs[element.name] = element.id\n    });\n    setGroupID(groupIDs)\n    setGroup(group_names)\n    response = await axios.get(`http://${window.location.hostname}:8080/api/user`)\n    setStudents(response.data)\n    let other = {}\n    let studentsOfGroup = {}\n    response.data.forEach(element => {\n      if (element.groupID !== idOfGroup && element.role === 'student')\n        other[element.firstName + ' ' + element.lastName] = element.id\n      else if (element.groupID === idOfGroup) {\n        studentsOfGroup[element.id] = element\n      }\n    });\n    console.log(studentsOfGroup)\n    setGroupStudents(studentsOfGroup)\n    setOtherStudents(other)\n    response = await axios.get(`http://${window.location.hostname}:8080/api/attendance`)\n    console.log(response)\n    let attendancesDict = {}\n\n    response.data.forEach(element => {\n      let key = `${element.nameOfSubject} ${element.attendanceFrom} - ${element.attendanceTo}`\n      console.log(studentsOfGroup[element.studentID])\n      if (Object.keys(attendancesDict).includes(key)) {\n        attendancesDict[key].push({\n          firstName: 'sdasd',\n          lastName: 'asd',\n          status: element.attendanceStatus\n        })\n      }\n      else {\n        attendancesDict[key] = [{\n          firstName: 'studentsOfGroup[element.studentID].firstName',\n          lastName: 'studentsOfGroup[element.studentID].lastName',\n          status: element.attendanceStatus\n        }]\n      }\n    });\n    console.log(attendancesDict)\n    setAttendances(response.data)\n  }\n\n  const handleCreate = async (groupName) => {\n    let xd = { name: groupName }\n    console.log(xd)\n    const response = await axios.post(\n      `http://${window.location.hostname}:8080/api/group`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    alert(`Group: ${response.data.name} created!`)\n    getData()\n  };\n  const handleAssign = async (groupName) => {\n    let xd = user\n    xd.groupID = groupsID[groupName]\n    console.log(xd)\n    const response = await axios.put(\n      `http://${window.location.hostname}:8080/api/user`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    getData()\n  };\n\n  const handleDelete = async (student) => {\n    student.groupID = null\n    console.log(student)\n    if (window.confirm(`Student ${student.firstName} ${student.lastName} will be deleted!`)) {\n      const response = await axios.put(\n        `http://${window.location.hostname}:8080/api/user`,\n        student,\n        { headers: { \"Content-Type\": \"application/json\" } }\n      );\n      console.log(response)\n    }\n    getData()\n  }\n\n  const handleAdd = async (student) => {\n    console.log(otherStudents[student])\n    let xd = {}\n    students.forEach((element) => {\n      if (otherStudents[student] === element.id) {\n        xd = element\n        xd.groupID = user.groupID\n      }\n    })\n    console.log(xd)\n    const response = await axios.put(\n      `http://${window.location.hostname}:8080/api/user`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    getData()\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"left-panel\">\n        <div>\n          <Avatar {...stringAvatar(user.firstName + ' ' + user.lastName)} />\n          {user.firstName} {user.lastName} <br />\n          <span style={{ fontSize: 32, fontWeight: 300 }}> {groups[user.groupID - 1]} </span>\n        </div>\n        <br />\n      </div>\n      <div className=\"groups\">\n        <h3>Group management</h3>\n        <TextField\n          id=\"name\"\n          label=\"Group name\"\n          type=\"name\"\n          variant=\"standard\"\n          style={{ margin: 10, verticalAlign: 'inherit', width: 300 }}\n        />\n        <Button variant=\"contained\" onClick={() => handleCreate(document.getElementById('name').value)}>Create Group</Button>\n        <br />\n        <div style={{ float: 'left' }}>\n          <Autocomplete\n            id=\"assign_group\"\n            options={groups}\n            disableClearable\n            renderInput={(params) => (\n              <TextField {...params} label=\"Group name\" variant=\"standard\" />\n            )}\n            style={{ margin: 10, verticalAlign: 'inherit', width: 300 }}\n          />\n        </div>\n        <Button style={{ float: 'left', margin: '23px 0' }} variant=\"outlined\" onClick={() => handleAssign(document.getElementById('assign_group').value)}>Change group</Button>\n      </div>\n      <div className=\"students\">\n        <h3 style={{ textAlign: 'center' }}>Your students</h3>\n        {students.map((element) => {\n          if (element.role === 'student' && element.groupID === user.groupID)\n            return (\n              <div className='student'>\n                {element.firstName} {element.lastName}\n                <Button\n                  style={{ position: 'absolute', right: 5 }}\n                  variant=\"outlined\"\n                  color=\"error\"\n                  onClick={() => handleDelete(element)}\n                >\n                  Delete\n                </Button>\n              </div>\n            )\n          else return null\n        })}\n        <div style={{ float: 'left' }}>\n          <Autocomplete\n            id=\"add_student\"\n            options={Object.keys(otherStudents)}\n            disableClearable\n            renderInput={(params) => (\n              <TextField {...params} label=\"Student\" variant=\"standard\" />\n            )}\n            style={{ margin: 10, verticalAlign: 'inherit', width: 260 }}\n          />\n        </div>\n        <Button style={{ position: 'absolute', right: 20, margin: '23px 0' }} variant=\"contained\" onClick={() => handleAdd(document.getElementById('add_student').value)}>add student</Button>\n      </div>\n      <div className=\"attendances\">\n        <h3>Attendance list</h3>\n        {/* {attendance.filter(element => Object.keys(groupStudents).map(value => parseInt(value)).includes(element.studentID)).map((element) => {\n          console.log(groupStudents[element.studentID].role)\n          if (groupStudents[element.studentID].role === 'teacher')\n          return (\n            <div>{element.nameOfSubject} {element.attendanceFrom} - {element.attendanceTo}<br />\n            </div>\n          )\n          else\n          return (\n            <div>{groupStudents[element.studentID].firstName} {groupStudents[element.studentID].lastName} {element.attendanceStatus === null ? '?' : element.attendanceStatus}<br />\n            </div>\n          )\n        })} */}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}