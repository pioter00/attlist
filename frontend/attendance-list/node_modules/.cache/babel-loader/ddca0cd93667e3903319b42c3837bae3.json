{"ast":null,"code":"var _jsxFileName = \"/home/piotr/AttendanceListReact/attendance-list/src/teacher/Teacher.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../styles/user.css';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  /* eslint-disable no-bitwise */\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n      width: 80,\n      height: 80,\n      margin: 'auto',\n      fontSize: 32\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`\n  };\n}\n\nexport default function Home() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setUser] = useState({});\n  const [groups, setGroup] = useState([]);\n  const [groupsID, setGroupID] = useState({});\n  const [students, setStudents] = useState([]);\n  const [otherStudents, setOtherStudents] = useState({});\n  const [attendance, setAttendances] = useState([]);\n\n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`);\n    console.log(response);\n    setUser(response.data);\n    let idOfGroup = response.data.groupID;\n    response = await axios.get(`http://${window.location.hostname}:8080/api/group`);\n    let group_names = [];\n    let groupIDs = {};\n    response.data.forEach(element => {\n      group_names.push(element.name);\n      groupIDs[element.name] = element.id;\n    });\n    setGroupID(groupIDs);\n    setGroup(group_names);\n    response = await axios.get(`http://${window.location.hostname}:8080/api/user`);\n    setStudents(response.data);\n    let other = {};\n    response.data.forEach(element => {\n      if (element.groupID !== idOfGroup && element.role === 'student') other[element.firstName + ' ' + element.lastName] = element.id;\n    });\n    setOtherStudents(other);\n    response = await axios.get(`http://${window.location.hostname}:8080/api/user/attendance/${id}`);\n    console.log(response);\n    setAttendances(response.data);\n  };\n\n  const handleCreate = async groupName => {\n    let xd = {\n      name: groupName\n    };\n    console.log(xd);\n    const response = await axios.post(`http://${window.location.hostname}:8080/api/group`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    alert(`Group: ${response.data.name} created!`);\n    getData();\n  };\n\n  const handleAssign = async groupName => {\n    let xd = user;\n    xd.groupID = groupsID[groupName];\n    console.log(xd);\n    const response = await axios.put(`http://${window.location.hostname}:8080/api/user`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    getData();\n  };\n\n  const handleDelete = async student => {\n    student.groupID = null;\n    console.log(student);\n\n    if (window.confirm(`Student ${student.firstName} ${student.lastName} will be deleted!`)) {\n      const response = await axios.put(`http://${window.location.hostname}:8080/api/user`, student, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(response);\n    }\n\n    getData();\n  };\n\n  const handleAdd = async student => {\n    console.log(otherStudents[student]);\n    let xd = {};\n    students.forEach(element => {\n      if (otherStudents[student] === element.id) {\n        xd = element;\n        xd.groupID = user.groupID;\n      }\n    });\n    console.log(xd);\n    const response = await axios.put(`http://${window.location.hostname}:8080/api/user`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    getData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, { ...stringAvatar(user.firstName + ' ' + user.lastName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), user.firstName, \" \", user.lastName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 32,\n            fontWeight: 300\n          },\n          children: [\" \", groups[user.groupID - 1], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Group management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        id: \"name\",\n        label: \"Group name\",\n        type: \"name\",\n        variant: \"standard\",\n        style: {\n          margin: 10,\n          verticalAlign: 'inherit',\n          width: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => handleCreate(document.getElementById('name').value),\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"assign_group\",\n          options: groups,\n          disableClearable: true,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Group name\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this),\n          style: {\n            margin: 10,\n            verticalAlign: 'inherit',\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: 'left',\n          margin: '23px 0'\n        },\n        variant: \"outlined\",\n        onClick: () => handleAssign(document.getElementById('assign_group').value),\n        children: \"Change group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"students\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Your students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), students.map(element => {\n        if (element.role === 'student' && element.groupID === user.groupID) return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student\",\n          children: [element.firstName, \" \", element.lastName, /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              position: 'absolute',\n              right: 5\n            },\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: () => handleDelete(element),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }, this);else return null;\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"add_student\",\n          options: Object.keys(otherStudents),\n          disableClearable: true,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Student\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this),\n          style: {\n            margin: 10,\n            verticalAlign: 'inherit',\n            width: 260\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 20,\n          margin: '23px 0'\n        },\n        variant: \"contained\",\n        onClick: () => handleAdd(document.getElementById('add_student').value),\n        children: \"add student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendances\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Attendance list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), attendance.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [element.nameOfSubject, \" \", element.attendanceFrom, \" - \", element.attendanceTo, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 95\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"hbTe3aDN2I6RRf1bQASB6ssAZEs=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/piotr/AttendanceListReact/attendance-list/src/teacher/Teacher.js"],"names":["React","useEffect","useState","axios","useParams","Button","TextField","Autocomplete","Avatar","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","stringAvatar","name","sx","bgcolor","width","height","margin","fontSize","children","split","Home","id","getData","user","setUser","groups","setGroup","groupsID","setGroupID","students","setStudents","otherStudents","setOtherStudents","attendance","setAttendances","response","get","window","location","hostname","console","log","data","idOfGroup","groupID","group_names","groupIDs","forEach","element","push","other","role","firstName","lastName","handleCreate","groupName","xd","post","headers","alert","handleAssign","put","handleDelete","student","confirm","handleAdd","fontWeight","verticalAlign","document","getElementById","float","params","textAlign","map","position","right","Object","keys","nameOfSubject","attendanceFrom","attendanceTo"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../styles/user.css'\nimport Avatar from '@mui/material/Avatar';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n      width: 80,\n      height: 80,\n      margin: 'auto',\n      fontSize: 32\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n  };\n}\n\nexport default function Home() {\n  let { id } = useParams()\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setUser] = useState({});\n  const [groups, setGroup] = useState([]);\n  const [groupsID, setGroupID] = useState({});\n  const [students, setStudents] = useState([]);\n  const [otherStudents, setOtherStudents] = useState({});\n  const [attendance, setAttendances] = useState([]);\n  \n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`)\n    console.log(response)\n    setUser(response.data)\n    let idOfGroup = response.data.groupID\n    response = await axios.get(`http://${window.location.hostname}:8080/api/group`)\n    \n    let group_names = [];\n    let groupIDs = {}\n    response.data.forEach(element => {\n      group_names.push(element.name)\n      groupIDs[element.name] = element.id\n    });\n    setGroupID(groupIDs)\n    setGroup(group_names)\n    response = await axios.get(`http://${window.location.hostname}:8080/api/user`)\n    setStudents(response.data)\n    let other = {}\n    response.data.forEach(element => {\n      if (element.groupID !== idOfGroup && element.role === 'student')\n        other[element.firstName + ' ' + element.lastName] = element.id\n    });\n    setOtherStudents(other)\n    response = await axios.get(`http://${window.location.hostname}:8080/api/user/attendance/${id}`)\n    console.log(response)\n    setAttendances(response.data)\n  }\n\n  const handleCreate = async (groupName) => {\n    let xd = { name: groupName }\n    console.log(xd)\n    const response = await axios.post(\n      `http://${window.location.hostname}:8080/api/group`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    alert(`Group: ${response.data.name} created!`)\n    getData()\n  };\n  const handleAssign = async (groupName) => {\n    let xd = user\n    xd.groupID = groupsID[groupName]\n    console.log(xd)\n    const response = await axios.put(\n      `http://${window.location.hostname}:8080/api/user`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    getData()\n  };\n\n  const handleDelete = async (student) => {\n    student.groupID = null\n    console.log(student)\n    if (window.confirm(`Student ${student.firstName} ${student.lastName} will be deleted!`)){\n      const response = await axios.put(\n        `http://${window.location.hostname}:8080/api/user`,\n        student,\n        { headers: { \"Content-Type\": \"application/json\" } }\n      );\n      console.log(response)\n    }\n    getData()\n  }\n\n  const handleAdd = async (student) => {\n    console.log(otherStudents[student])\n    let xd = {}\n    students.forEach((element) => {\n        if (otherStudents[student] === element.id){\n          xd = element\n          xd.groupID = user.groupID\n        }\n    })\n    console.log(xd)\n    const response = await axios.put(\n      `http://${window.location.hostname}:8080/api/user`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    getData()\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"left-panel\">\n        <div>\n          <Avatar {...stringAvatar(user.firstName + ' ' + user.lastName)} />\n          {user.firstName} {user.lastName} <br />\n          <span style={{fontSize:32, fontWeight: 300}}> {groups[user.groupID - 1]} </span>\n        </div>\n        <br/>\n      </div>\n      <div className=\"groups\">\n          <h3>Group management</h3>\n          <TextField\n              autoFocus\n              id=\"name\"\n              label=\"Group name\"\n              type=\"name\"\n              variant=\"standard\"\n              style={{margin: 10, verticalAlign: 'inherit', width: 300}}\n            />\n            <Button variant=\"contained\" onClick={() => handleCreate(document.getElementById('name').value)}>Create Group</Button>\n            <br />\n            <div style={{float: 'left'}}>\n              <Autocomplete\n                id=\"assign_group\"\n                options={groups}\n                disableClearable\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Group name\" variant=\"standard\" />\n                )}\n                style={{margin: 10, verticalAlign: 'inherit', width: 300}}\n              />\n            </div>\n            <Button style={{float: 'left', margin: '23px 0'}} variant=\"outlined\" onClick={() => handleAssign(document.getElementById('assign_group').value)}>Change group</Button>\n      </div>\n      <div className=\"students\">\n          <h3 style={{textAlign: 'center'}}>Your students</h3>\n          {students.map((element) => {\n              if (element.role === 'student' && element.groupID === user.groupID)\n                return (\n                  <div className='student'>\n                    {element.firstName} {element.lastName} \n                      <Button \n                        style={{position: 'absolute', right: 5}} \n                        variant=\"outlined\"\n                        color=\"error\"\n                        onClick={() => handleDelete(element)}\n                      > \n                        Delete \n                      </Button>\n                  </div>\n                )\n                else return null\n            })}\n            <div style={{float: 'left'}}>\n              <Autocomplete\n                id=\"add_student\"\n                options={Object.keys(otherStudents)}\n                disableClearable\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Student\" variant=\"standard\" />\n                )}\n                style={{margin: 10, verticalAlign: 'inherit', width: 260}}\n              />\n            </div>\n            <Button style={{position: 'absolute', right: 20, margin: '23px 0'}} variant=\"contained\" onClick={() => handleAdd(document.getElementById('add_student').value)}>add student</Button>\n      </div>\n      <div className=\"attendances\">\n          <h3>Attendance list</h3>\n          {attendance.map((element) => {\n              return (\n                <div>{element.nameOfSubject} {element.attendanceFrom} - {element.attendanceTo}<br />\n\n                </div>\n                \n              )\n            })}\n      </div>\n  </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}