{"ast":null,"code":"var _jsxFileName = \"/home/piotr/AttendanceListReact/attendance-list/src/teacher/Teacher.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../styles/user.css';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  /* eslint-disable no-bitwise */\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name)\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`\n  };\n}\n\nexport default function Home() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setUser] = useState({});\n  const [groups, setGroup] = useState([]);\n  const [groupsID, setGroupID] = useState({});\n\n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`);\n    console.log(response);\n    setUser(response.data);\n    response = await axios.get(`http://${window.location.hostname}:8080/api/group`);\n    let group_names = [];\n    let groupIDs = {};\n    response.data.forEach(element => {\n      group_names.push(element.name);\n      groupIDs[element.name] = element.id;\n    });\n    setGroupID(groupIDs);\n    setGroup(group_names);\n  };\n\n  const [open, setOpen] = useState(false);\n  const [open1, setOpen1] = useState(false);\n\n  const handleClickOpen1 = () => {\n    setOpen1(true);\n  };\n\n  const handleClose1 = () => {\n    setOpen1(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCreate = async groupName => {\n    setOpen(false);\n    let xd = {\n      name: groupName\n    };\n    console.log(xd);\n    const response = await axios.post(`http://${window.location.hostname}:8080/api/group`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    handleClose();\n  };\n\n  const handleAssign = async groupName => {\n    setOpen(false);\n    let xd = user;\n    xd.groupID = groupsID[groupName];\n    console.log(xd);\n    const response = await axios.put(`http://${window.location.hostname}:8080/api/user`, xd, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n    handleClose1();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 56,\n          height: 56\n        },\n        ...stringAvatar(user.firstName + ' ' + user.lastName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), user.firstName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this), user.lastName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), user.role, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 20\n      }, this), user.groupID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Group management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Create group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"In order to manage group you need to to choose group or create a new one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Group name\",\n            type: \"name\",\n            fullWidth: true,\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleCreate(document.getElementById('name').value),\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen1,\n        children: \"Assign to Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open1,\n        onClose: handleClose1,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Assign to group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"In order to manage group you need to to choose group or create a new one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"assign_group\",\n            options: groups,\n            limitTags: \"0\",\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose1,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAssign(document.getElementById('assign_group').value),\n            children: \"Assign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"students\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Your students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendances\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Attendance list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"4mZTCjgzRNho5yo7oXbiZHxF9dM=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/piotr/AttendanceListReact/attendance-list/src/teacher/Teacher.js"],"names":["React","useEffect","useState","axios","useParams","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Autocomplete","Avatar","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","stringAvatar","name","sx","bgcolor","children","split","Home","id","getData","user","setUser","groups","setGroup","groupsID","setGroupID","response","get","window","location","hostname","console","log","data","group_names","groupIDs","forEach","element","push","open","setOpen","open1","setOpen1","handleClickOpen1","handleClose1","handleClickOpen","handleClose","handleCreate","groupName","xd","post","headers","handleAssign","groupID","put","width","height","firstName","lastName","role","document","getElementById","params","textAlign"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../styles/user.css'\nimport Avatar from '@mui/material/Avatar';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n  };\n}\n\nexport default function Home() {\n  let { id } = useParams()\n  useEffect(() => {\n    getData();\n  }, []);\n  const [user, setUser] = useState({});\n  const [groups, setGroup] = useState([]);\n  const [groupsID, setGroupID] = useState({});\n\n  const getData = async () => {\n    let response = await axios.get(`http://${window.location.hostname}:8080/api/user/${id}`)\n    console.log(response)\n    setUser(response.data)\n    response = await axios.get(`http://${window.location.hostname}:8080/api/group`)\n\n    let group_names = [];\n    let groupIDs = {}\n    response.data.forEach(element => {\n      group_names.push(element.name)\n      groupIDs[element.name] = element.id\n    });\n    setGroupID(groupIDs)\n    setGroup(group_names)\n  }\n  const [open, setOpen] = useState(false);\n  const [open1, setOpen1] = useState(false);\n  const handleClickOpen1 = () => {\n    setOpen1(true);\n  };\n\n  const handleClose1 = () => {\n    setOpen1(false);\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCreate = async (groupName) => {\n    setOpen(false);\n    let xd = { name: groupName }\n    console.log(xd)\n    const response = await axios.post(\n      `http://${window.location.hostname}:8080/api/group`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    handleClose()\n  };\n  const handleAssign = async (groupName) => {\n    setOpen(false);\n    let xd = user\n    xd.groupID = groupsID[groupName]\n    console.log(xd)\n    const response = await axios.put(\n      `http://${window.location.hostname}:8080/api/user`,\n      xd,\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(response)\n    handleClose1()\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"left-panel\">\n        <Avatar sx={{ width: 56, height: 56 }}{...stringAvatar(user.firstName + ' ' + user.lastName)} />\n        <br/>\n        {user.firstName}<br />\n        {user.lastName} <br />\n        {user.role}<br />\n        {user.groupID}<br />\n      </div>\n      <div className=\"groups\">\n          <h3>Group management</h3>\n          <Button variant=\"outlined\" onClick={handleClickOpen}>\n          Create Group\n        </Button>\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>Create group</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              In order to manage group you need to to choose group or create a new one\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Group name\"\n              type=\"name\"\n              fullWidth\n              variant=\"standard\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={() => handleCreate(document.getElementById('name').value)}>Create</Button>\n          </DialogActions>\n        </Dialog>\n        <Button variant=\"outlined\" onClick={handleClickOpen1}>\n          Assign to Group\n        </Button>\n        <Dialog open={open1} onClose={handleClose1}>\n          <DialogTitle>Assign to group</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              In order to manage group you need to to choose group or create a new one\n            </DialogContentText>\n            <Autocomplete\n              disablePortal\n              id=\"assign_group\"\n              options={groups}\n              limitTags=\"0\"\n              sx={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Group\" />}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose1}>Cancel</Button>\n            <Button onClick={() => handleAssign(document.getElementById('assign_group').value)}>Assign</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      <div className=\"students\">\n          <h3 style={{textAlign: 'center'}}>Your students</h3>\n      </div>\n      <div className=\"attendances\">\n          <h3>Attendance list</h3>\n      </div>\n  </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}